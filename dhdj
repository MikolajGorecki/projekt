public class WeatherForecastController : Controller
{
    private readonly HttpClient _httpClient;
    private readonly string _apiUrl = "https://localhost:5001/api/WeatherForecast"; // Zaktualizuj z odpowiednim URL

    public WeatherForecastController(HttpClient httpClient)
    {
        _httpClient = httpClient;
    }

    // GET: WeatherForecast/Create
    [HttpGet("Create")]
    public IActionResult Create()
    {
        return View();
    }

    // POST: WeatherForecast/Create
    [HttpPost("Create")]
    public async Task<IActionResult> Create(WeatherForecast forecast)
    {
        if (ModelState.IsValid)
        {
            // Pobierz token JWT
            string token = Request.Cookies["jwt"]; // Załóżmy, że token jest zapisany w ciasteczku

            // Dodaj token do nagłówka autoryzacji
            _httpClient.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue("Bearer", token);

            // Zrób POST do API z danymi
            var response = await _httpClient.PostAsJsonAsync(_apiUrl, forecast);

            if (response.IsSuccessStatusCode)
            {
                // Jeśli odpowiedź jest OK, przekieruj na stronę główną lub wyświetl komunikat
                return RedirectToAction("Index");
            }
            else
            {
                // Obsługa błędów, np. wyświetlenie komunikatu
                ModelState.AddModelError("", "Błąd podczas wysyłania danych");
            }
        }

        return View(forecast);
    }
}
